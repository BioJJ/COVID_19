package views;

import Model.bean.Cidade;
import Model.bean.Consulta;
import Model.bean.Grau_Risco;
import Model.bean.Item_perguntas;
import Model.bean.Item_selecionados;
import Model.bean.Pergunta;
import Model.bean.Pessoas;
import Model.bean.Sintomas;
import Model.dao.CidadeDao;
import Model.dao.ConsultaDao;
import Model.dao.Grau_RiscoDao;
import Model.dao.Item_SelecionadosDao;
import Model.dao.Item_perguntasDao;
import Model.dao.PerguntaDao;
import Model.dao.PessoasDao;
import Model.dao.SintomasDao;
import Model.dao.WebServiceCep;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bio_j
 */
public class TelaConsulta_1 extends javax.swing.JFrame {

    Cidade c = new Cidade();
    CidadeDao cdao = new CidadeDao();

    Pessoas p = new Pessoas();
    PessoasDao pdao = new PessoasDao();

    Sintomas s = new Sintomas();
    SintomasDao sdao = new SintomasDao();

    Grau_Risco grau = new Grau_Risco();
    Grau_RiscoDao grauDao = new Grau_RiscoDao();

    Item_selecionados i = new Item_selecionados();
    Item_SelecionadosDao idao = new Item_SelecionadosDao();

    Pergunta pp = new Pergunta();
    PerguntaDao ppdao = new PerguntaDao();

    Item_perguntas ip = new Item_perguntas();
    Item_perguntasDao ipdao = new Item_perguntasDao();

    Consulta cc = new Consulta();
    ConsultaDao ccdao = new ConsultaDao();

    FundoPanel fundo = new FundoPanel();

    public TelaConsulta_1(String pessoa) {
        this.setContentPane(fundo);
        initComponents();

        iniciar_consulta(pessoa);

        for (Sintomas ss : sdao.read()) {
            cb_sintomas.addItem(ss);
        }

        for (Grau_Risco gg : grauDao.read()) {
            cb_grau.addItem(gg);
        }

        for (Pergunta per : ppdao.read()) {
            cb_pergunta.addItem(per);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        abas = new javax.swing.JTabbedPane();
        Consulta = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cb_grau = new javax.swing.JComboBox();
        cb_sintomas = new javax.swing.JComboBox();
        inserir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_selecionados = new javax.swing.JTable();
        cb_pergunta = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        cb_resposta = new javax.swing.JComboBox<>();
        Inserir_pergunta = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_perguntas = new javax.swing.JTable();
        finalizar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        idade = new javax.swing.JFormattedTextField();
        tempe = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        press = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        nomee = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cpf = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        abas.setBackground(new java.awt.Color(0, 153, 153));

        Consulta.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("Idade");

        cb_grau.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "< - - Selecione o grau de risco - - >" }));

        cb_sintomas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "< - - Selecione o sintoma - - >" }));

        inserir.setText("Inserir");
        inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirActionPerformed(evt);
            }
        });

        tabela_selecionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Descrição", "Risco"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela_selecionados);

        cb_pergunta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<selecione a pergunta>" }));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel11.setText("Informe seus sintomas e Grau de Risco");

        cb_resposta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE", "SIM", "NÃO" }));

        Inserir_pergunta.setText("Inserir");
        Inserir_pergunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inserir_perguntaActionPerformed(evt);
            }
        });

        tabela_perguntas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Pergunta", "Resposta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabela_perguntas);

        finalizar.setText("Finalizar Consulta");
        finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel9.setText("Questionario");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setText("Temperatura");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel12.setText("Pressão");

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel13.setText("Nome Completo");

        nomee.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel14.setText("CPF");

        cpf.setEnabled(false);

        javax.swing.GroupLayout ConsultaLayout = new javax.swing.GroupLayout(Consulta);
        Consulta.setLayout(ConsultaLayout);
        ConsultaLayout.setHorizontalGroup(
            ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsultaLayout.createSequentialGroup()
                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConsultaLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(finalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ConsultaLayout.createSequentialGroup()
                        .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ConsultaLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConsultaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13)
                                    .addGroup(ConsultaLayout.createSequentialGroup()
                                        .addComponent(cb_sintomas, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cb_grau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(inserir, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nomee, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                                    .addComponent(jLabel14)
                                    .addComponent(cpf)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(91, 91, 91)
                        .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(ConsultaLayout.createSequentialGroup()
                                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idade, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tempe, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(28, 28, 28)
                                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(press, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)))
                            .addGroup(ConsultaLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ConsultaLayout.createSequentialGroup()
                                .addComponent(cb_pergunta, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cb_resposta, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Inserir_pergunta, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        ConsultaLayout.setVerticalGroup(
            ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsultaLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ConsultaLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomee, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ConsultaLayout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ConsultaLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ConsultaLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tempe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ConsultaLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(press, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConsultaLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_sintomas, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_grau, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inserir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ConsultaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_pergunta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_resposta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Inserir_pergunta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addGroup(ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(finalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        abas.addTab("Consulta", Consulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(abas, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(abas)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void iniciar_consulta(String nomepesq) {

        for (Pessoas pesq : pdao.readForNome(nomepesq)) {
            nomee.setText(pesq.getNome());
            cpf.setText(pesq.getCpf());
        }

    }
    private void inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirActionPerformed
        inserir_sintomas();
    }//GEN-LAST:event_inserirActionPerformed
    public void inserir_sintomas() {
        if (cb_sintomas.getSelectedItem().equals("< - - Selecione o sintoma - - >")
                | cb_grau.getSelectedItem().equals("< - - Selecione o grau de risco - - >")) {
            JOptionPane.showMessageDialog(null, "ATENÇÃO, preencha todos os campos");
        } else {

            for (Consulta con : ccdao.readForNome(nomee.getText())) {
                i.setConsulta(con);
            }
            Sintomas sintomaa = (Sintomas) cb_sintomas.getSelectedItem();
            i.setSintoma(sintomaa);

            Grau_Risco grauuu = (Grau_Risco) cb_grau.getSelectedItem();
            i.setGrau(grauuu);

            idao.create(i);
            Tabela_sintomas();
            cb_sintomas.setSelectedIndex(0);
            cb_grau.setSelectedIndex(0);

        }
    }

    public void Tabela_sintomas() {
        DefaultTableModel modelo = (DefaultTableModel) tabela_selecionados.getModel();
        modelo.setNumRows(0);
        int codi = 0;
        for (Consulta con : ccdao.readForNome(nomee.getText())) {
            codi = con.getId();
        }
        for (Item_selecionados ii : idao.listar_sintomas(codi)) {
            modelo.addRow(new Object[]{
                ii.getId(),
                ii.getSintoma().getDescricao(),
                ii.getGrau().getDescricao(),});
        }
    }
    private void Inserir_perguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inserir_perguntaActionPerformed
        inserirPergunta();
    }//GEN-LAST:event_Inserir_perguntaActionPerformed

    private void finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarActionPerformed

        atualizar_consulta();
    }//GEN-LAST:event_finalizarActionPerformed
    public void atualizar_consulta() {

        if (idade.getText().equals("") || tempe.getText().equals("") || press.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "ATENÇÃO,preenchar os dados");
        } else {

            for (Consulta ccpesq : ccdao.readForNome(nomee.getText())) {

                cc.setId(ccpesq.getId());

            }

            cc.setStatuss("Pendente");
            cc.setIdade(idade.getText());
            cc.setTemp(tempe.getText());
            cc.setPress(press.getText());

            ccdao.update(cc);

            finalizar();
        }
    }

    public void finalizar() {
        JOptionPane.showMessageDialog(null, "ATENÇÃO, estamos analisando os dados da sua consulta");
        new inicial().setVisible(true);
        dispose();

    }

    public void inserirPergunta() {
        if (cb_pergunta.getSelectedItem().equals("<selecione a pergunta>")
                | cb_resposta.getSelectedItem().equals("SELECIONE")) {
            JOptionPane.showMessageDialog(null, "ATENÇÃO, preencha todos os campos");
        } else {

            for (Consulta con : ccdao.readForNome(nomee.getText())) {
                ip.setConsulta(con);
            }
            Pergunta pergu = (Pergunta) cb_pergunta.getSelectedItem();
            ip.setPergunta(pergu);

            String resposta = (String) cb_resposta.getSelectedItem();
            ip.setResposta(resposta);

            ipdao.create(ip);
            Tabela_pergunta();
            cb_pergunta.setSelectedIndex(0);
            cb_resposta.setSelectedIndex(0);

        }
    }

    public void Tabela_pergunta() {
        DefaultTableModel modelo = (DefaultTableModel) tabela_perguntas.getModel();
        modelo.setNumRows(0);

        int codii = 0;
        for (Consulta con : ccdao.readForNome(nomee.getText())) {
            codii = con.getId();
        }

        for (Item_perguntas ipp : ipdao.listar_pergunta(codii)) {
            modelo.addRow(new Object[]{
                ipp.getId(),
                ipp.getPergunta().getPergunta(),
                ipp.getResposta(),});
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String nomepesq = "maria";
                new TelaConsulta_1(nomepesq).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Consulta;
    private javax.swing.JButton Inserir_pergunta;
    private javax.swing.JTabbedPane abas;
    private javax.swing.JComboBox cb_grau;
    private javax.swing.JComboBox cb_pergunta;
    private javax.swing.JComboBox<String> cb_resposta;
    private javax.swing.JComboBox cb_sintomas;
    private javax.swing.JTextField cpf;
    private javax.swing.JButton finalizar;
    private javax.swing.JFormattedTextField idade;
    private javax.swing.JButton inserir;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nomee;
    private javax.swing.JFormattedTextField press;
    private javax.swing.JTable tabela_perguntas;
    private javax.swing.JTable tabela_selecionados;
    private javax.swing.JFormattedTextField tempe;
    // End of variables declaration//GEN-END:variables

    class FundoPanel extends JPanel {

        private Image imagem;

        @Override
        public void paint(Graphics g) {
//pessoas.jpeg
            imagem = new ImageIcon(getClass().getResource("/imagens/telaADM.jpg")).getImage();
            g.drawImage(imagem, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }

    }

}
